// <auto-generated />
using System;
using Desafio.InfraStructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Desafio.InfraStructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Desafio.Domain.Entities.Ativo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("QuantidadeNegociados")
                        .HasColumnType("int");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ativos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e662be8-8664-4d54-b9ba-734d06c0d4b7"),
                            Codigo = "PETR4",
                            QuantidadeNegociados = 5,
                            Valor = 28.44m
                        },
                        new
                        {
                            Id = new Guid("4c45c87c-dfdf-41e6-a580-051c392f0458"),
                            Codigo = "MGLU3",
                            QuantidadeNegociados = 4,
                            Valor = 25.91m
                        },
                        new
                        {
                            Id = new Guid("4cd6fe4d-c817-413c-8c3a-6c87f4635757"),
                            Codigo = "VVAR3",
                            QuantidadeNegociados = 3,
                            Valor = 25.91m
                        },
                        new
                        {
                            Id = new Guid("fd0bbe63-640e-4854-9389-7e8aa321832f"),
                            Codigo = "SANB11",
                            QuantidadeNegociados = 2,
                            Valor = 40.77m
                        },
                        new
                        {
                            Id = new Guid("c4d73ebe-3c33-402e-ad67-233bb7d20051"),
                            Codigo = "TORO4",
                            QuantidadeNegociados = 1,
                            Valor = 115.98m
                        });
                });

            modelBuilder.Entity("Desafio.Domain.Entities.ContaCorrente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Saldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.ToTable("ContasCorrentes");
                });

            modelBuilder.Entity("Desafio.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<Guid>("ContaCorrenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Desafio.Domain.Entities.Ativo", b =>
                {
                    b.HasOne("Desafio.Domain.Entities.Usuario", null)
                        .WithMany("Ativos")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Desafio.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Desafio.Domain.Entities.ContaCorrente", "ContaCorrente")
                        .WithMany()
                        .HasForeignKey("ContaCorrenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaCorrente");
                });

            modelBuilder.Entity("Desafio.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Ativos");
                });
#pragma warning restore 612, 618
        }
    }
}
